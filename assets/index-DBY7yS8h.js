var e=Object.defineProperty,t=(t,i,s)=>((t,i,s)=>i in t?e(t,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[i]=s)(t,"symbol"!=typeof i?i+"":i,s);import{p as i}from"./phaser-CwoquCe3.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const i of e)if("childList"===i.type)for(const e of i.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();const s=[40,100,300,1200],r={T:[[0,2,0],[2,2,2],[0,0,0]],O:[[3,3],[3,3]],L:[[0,0,5],[5,5,5],[0,0,0]],J:[[4,0,0],[4,4,4],[0,0,0]],I:[[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]],S:[[0,7,7],[7,7,0],[0,0,0]],Z:[[6,6,0],[0,6,6],[0,0,0]]},a=Object.keys(r),l={"0->R":[[0,0],[-1,0],[-1,1],[0,-2],[-1,-2]],"R->0":[[0,0],[1,0],[1,-1],[0,2],[1,2]],"R->2":[[0,0],[1,0],[1,-1],[0,2],[1,2]],"2->R":[[0,0],[-1,0],[-1,1],[0,-2],[-1,-2]],"2->L":[[0,0],[1,0],[1,1],[0,-2],[1,-2]],"L->2":[[0,0],[-1,0],[-1,-1],[0,2],[-1,2]],"L->0":[[0,0],[-1,0],[-1,-1],[0,2],[-1,2]],"0->L":[[0,0],[1,0],[1,1],[0,-2],[1,-2]]},h={"0->R":[[0,0],[-2,0],[1,0],[-2,-1],[1,2]],"R->0":[[0,0],[2,0],[-1,0],[2,1],[-1,-2]],"R->2":[[0,0],[-1,0],[2,0],[-1,2],[2,-1]],"2->R":[[0,0],[1,0],[-2,0],[1,-2],[-2,1]],"2->L":[[0,0],[2,0],[-1,0],[2,1],[-1,-2]],"L->2":[[0,0],[-2,0],[1,0],[-2,-1],[1,2]],"L->0":[[0,0],[1,0],[-2,0],[1,-2],[-2,1]],"0->L":[[0,0],[-1,0],[2,0],[-1,2],[2,-1]]};class o{constructor(e){t(this,"bag",[]),this.blockTypes=e}shuffleBag(){this.bag=[...this.blockTypes];for(let e=this.bag.length-1;e>0;e--){const t=Math.floor(Math.random()*(e+1));[this.bag[e],this.bag[t]]=[this.bag[t],this.bag[e]]}}generatePiece(){return 0===this.bag.length&&this.shuffleBag(),this.bag.pop()}}function n(e,t){if(!e)return null;const i=structuredClone(e);for(let s=0;s<i.length;++s)for(let e=0;e<s;++e)[i[e][s],i[s][e]]=[i[s][e],i[e][s]];return"CW"===t?i.forEach((e=>e.reverse())):i.reverse(),i}class p extends i.Scene{constructor(){super("Game"),t(this,"playAreaX",0),t(this,"playAreaY",20),t(this,"lastUpdateTime",0),t(this,"gameSpeed",1e3),t(this,"softDropSpeed",20),t(this,"downKeyPressTime",0),t(this,"softDropping",!1),t(this,"softDropDelay",100),t(this,"das",150),t(this,"arr",30),t(this,"moveDirection",null),t(this,"keyPressTime",0),t(this,"lastMoveTime",0),t(this,"bgMusic"),t(this,"cursors"),t(this,"zKey"),t(this,"spaceKey"),t(this,"canRotate",!0),t(this,"inputLocked",!1),t(this,"grid",Array.from({length:20},(()=>Array(10).fill(0)))),t(this,"playerSprite",null),t(this,"playerRow",0),t(this,"playerCol",0),t(this,"playerRotation","0"),t(this,"playerType",null),t(this,"playerMatrix",null),t(this,"gridBlocks",[]),t(this,"pauseGame",!1),t(this,"showGridLines",!1),t(this,"gameOver",!1),t(this,"downKeyReleased",!0),t(this,"pieceGenerator",new o(a)),t(this,"nextPieces",[]),t(this,"nextPiecesSprites",[]),t(this,"score",0),t(this,"level",0),t(this,"initialLevel",0),t(this,"totalLines",0),t(this,"scoreText",null),t(this,"levelText",null),t(this,"linesText",null)}preload(){this.load.atlas("tetrominos","assets/tetris-blocks2.png","assets/tetris-blocks2.json"),this.load.spritesheet("tiles","assets/tetris-tiles2.png",{frameWidth:32,frameHeight:32}),this.load.audio("tetrisMusic","/phaser-tetris/assets/tetris-theme-3uvX0fkN.mp3"),this.load.image("background","assets/background.png"),this.load.bitmapFont("arcade","assets/arcade.png","assets/arcade.xml")}create(){var e,t,i,s;this.score=0,this.lastUpdateTime=0,this.level=this.initialLevel,this.gameSpeed=Math.max(100,1e3-50*this.level),this.setupWorld(),this.setupMusic(),this.cursors=null==(e=this.input.keyboard)?void 0:e.createCursorKeys(),this.zKey=null==(t=this.input.keyboard)?void 0:t.addKey(Phaser.Input.Keyboard.KeyCodes.Z),null==(s=null==(i=this.input)?void 0:i.keyboard)||s.on("keydown-SPACE",(()=>{!this.inputLocked&&this.playerSprite&&this.handleHardDrop()})),this.nextPieces.push(this.pieceGenerator.generatePiece()),this.newBlock()}setupMusic(){this.bgMusic=this.sound.add("tetrisMusic"),this.bgMusic.loop=!0}setupWorld(){const e=320;if(this.playAreaX=20,console.log({playAreaWidth:e,playAreaHeight:640}),this.add.rectangle(this.playAreaX,this.playAreaY,324,644,0).setOrigin(0,0),this.add.rectangle(this.playAreaX+e+20,this.playAreaY,150,324,0).setOrigin(0,0),this.add.bitmapText(this.playAreaX+e+40,this.playAreaY+20,"arcade","Score",18).setOrigin(0,0).setTint(16769126),this.scoreText=this.add.bitmapText(this.playAreaX+e+40,this.playAreaY+45,"arcade",String(this.score),18).setOrigin(0,0).setTint(16777215),this.add.bitmapText(this.playAreaX+e+40,this.playAreaY+80,"arcade","Next",18).setOrigin(0,0).setTint(16769126),this.add.bitmapText(this.playAreaX+e+40,this.playAreaY+200,"arcade","Level",18).setOrigin(0,0).setTint(16769126),this.levelText=this.add.bitmapText(this.playAreaX+e+40,this.playAreaY+225,"arcade",String(this.level),18).setOrigin(0,0).setTint(16777215),this.add.bitmapText(this.playAreaX+e+40,this.playAreaY+260,"arcade","Lines",18).setOrigin(0,0).setTint(16769126),this.linesText=this.add.bitmapText(this.playAreaX+e+40,this.playAreaY+285,"arcade",String(this.totalLines),18).setOrigin(0,0).setTint(16777215),this.showGridLines){for(let e=1;e<10;e++){const t=32*e;this.add.line(this.playAreaX,this.playAreaY,t,0,t,640,2236962).setOrigin(0,0)}for(let e=1;e<20;e++){const t=32*e;this.add.line(this.playAreaX,this.playAreaY,0,t,320,t,2236962).setOrigin(0,0)}}}checkCollision(){var e,t;if(!this.playerMatrix)return!1;for(let i=0;i<this.playerMatrix.length;i++)for(let s=0;s<this.playerMatrix[i].length;s++)if(0!==this.playerMatrix[i][s]&&(void 0===(null==(e=this.grid[this.playerRow+i])?void 0:e[this.playerCol+s])||0!==(null==(t=this.grid[this.playerRow+i])?void 0:t[this.playerCol+s])))return!0;return!1}addPlayerToGrid(){var e,t,i,s;if(this.playerMatrix){if(0===this.playerRow)return!1;for(let r=0;r<this.playerMatrix.length;r++)for(let a=0;a<this.playerMatrix[r].length;a++)if(0!==this.playerMatrix[r][a]){const l=(null==(e=this.playerMatrix[r-1])?void 0:e[a])??0,h=(null==(t=this.playerMatrix[r])?void 0:t[a+1])??0,o=(null==(i=this.playerMatrix[r+1])?void 0:i[a])??0,n=(null==(s=this.playerMatrix[r])?void 0:s[a-1])??0;this.grid[this.playerRow+r][this.playerCol+a]=[l,h,o,n]}return!0}}updateScore(e){var t,i,r;e>0&&(this.totalLines+=e,this.score+=s[e-1]*(this.level+1),this.level=Math.floor(this.totalLines/10)+this.initialLevel,this.gameSpeed=Math.max(100,1e3-150*this.level),null==(t=this.scoreText)||t.setText(`${this.score}`),null==(i=this.levelText)||i.setText(`${this.level}`),null==(r=this.linesText)||r.setText(`${this.totalLines}`))}clearCompletedLines(e){let t=0;const i=[];for(let s=0;s<20;s++){let e=0;for(let t=0;t<10;t++)this.grid[s][t]&&(e+=1);10===e&&(t+=1,i.push(s))}return this.updateScore(t),this.pauseGame=!0,this.time.delayedCall(t?100+100*t:10,(()=>{var t;this.gameOver||(i.forEach((e=>{var t;for(let i=0;i<10;i++){if(Array.isArray(this.grid[e-1][i])&&4===this.grid[e-1][i].length){const t=this.grid[e-1][i].flat().filter(Boolean)[0];this.grid[e-1][i][2]=0,0===this.grid[e-1][i].flat().filter(Boolean).length&&(this.grid[e-1][i]=[t])}if(Array.isArray(null==(t=this.grid[e+1])?void 0:t[i])&&4===this.grid[e+1][i].length){const t=this.grid[e+1][i].flat().filter(Boolean)[0];this.grid[e+1][i][0]=0,0===this.grid[e+1][i].flat().filter(Boolean).length&&(this.grid[e+1][i]=[t])}}})),i.forEach((e=>{this.grid.splice(e,1),this.grid.unshift(Array(10).fill(0))})),null==(t=this.playerSprite)||t.destroy(),this.playerSprite=null,this.newBlock(),this.renderGridBlocks(),this.pauseGame=!1,this.inputLocked=!1,null==e||e())})),this.downKeyPressTime=0,this.softDropping=!1,t}newBlock(){const e=this.nextPieces.shift();if(!e)return;this.playerType=e,this.playerRotation="0",this.playerRow=0,this.playerCol=3,this.playerMatrix=r[this.playerType];let t=!1;this.checkCollision()&&(t=!0),this.renderPlayerSprite(),t&&this.lockPiece(),this.lastUpdateTime=this.time.now}renderPlayerSprite(){const e=`${this.playerType}-${this.playerRotation}`;let t=this.playerCol,i=this.playerRow;"I"===this.playerType?"0"===this.playerRotation?i+=1:"R"===this.playerRotation?t+=2:"2"===this.playerRotation?i+=2:"L"===this.playerRotation&&(t+=1):"J"!==this.playerType&&"L"!==this.playerType&&"T"!==this.playerType&&"S"!==this.playerType&&"Z"!==this.playerType||("R"===this.playerRotation?t+=1:"2"===this.playerRotation&&(i+=1)),this.playerSprite?(this.playerSprite.setFrame(e),this.playerSprite.setX(8*t*4+this.playAreaX),this.playerSprite.setY(8*i*4+this.playAreaY)):this.playerSprite=this.add.sprite(8*t*4+this.playAreaX,8*i*4+this.playAreaY,"tetrominos",e).setOrigin(0,0)}canPlacePieceAt(e,t){if(!this.playerMatrix)return!1;for(let i=0;i<this.playerMatrix.length;i++)for(let s=0;s<this.playerMatrix[i].length;s++)if(0!==this.playerMatrix[i][s]&&(void 0===this.grid[t+i]||0!==this.grid[t+i][e+s]))return!1;return!0}renderPlayer(e,t="CW"){let i=!1;if("right"===e)this.playerCol+=1,this.checkCollision()&&(i=!0,this.playerCol-=1);else if("left"===e)this.playerCol-=1,this.checkCollision()&&(i=!0,this.playerCol+=1);else if("down"===e)this.playerRow+=1,this.checkCollision()&&(i=!0,this.playerRow-=1);else if("rotate"===e){const e=this.playerRotation,s=function(e,t){if("CW"===t){if("0"===e)return"R";if("R"===e)return"2";if("2"===e)return"L";if("L"===e)return"0"}else{if("0"===e)return"L";if("L"===e)return"2";if("2"===e)return"R";if("R"===e)return"0"}return e}(this.playerRotation,t),r="I"===this.playerType?h:l,a=`${e}->${s}`;this.playerMatrix=n(this.playerMatrix,t),i=!0;for(const[t,l]of r[a]){const e=this.playerCol+t,r=this.playerRow+l;if(this.canPlacePieceAt(e,r)&&(this.playerCol=e,this.playerRow=r,this.playerRotation=s,!this.checkCollision())){i=!1;break}}i&&(this.playerMatrix=n(this.playerMatrix,"CW"===t?"CCW":"CW"),this.playerRotation=e)}return this.renderPlayerSprite(),i}renderGridBlocks(){this.gridBlocks.forEach((e=>e.destroy()));for(let e=0;e<this.grid.length;e++)for(let t=0;t<this.grid[e].length;t++)if(0!==this.grid[e][t]&&Array.isArray(this.grid[e][t])){const i=this.grid[e][t][0],s=this.grid[e][t][1],r=this.grid[e][t][2],a=this.grid[e][t][3];let l=14;4===this.grid[e][t].length&&(i||!s||r||a?!i&&s&&!r&&a?l=1:i||s||r||!a?i||s||!r||a?i&&!s&&r&&!a?l=4:!i||s||r||a?i&&s&&!r&&a?l=6:i&&s&&r&&!a?l=7:!i&&s&&r&&a?l=8:i&&!s&&r&&a?l=9:!i&&s&&r&&!a?l=10:i&&!s&&!r&&a?l=11:i&&s&&!r&&!a?l=12:!i&&!s&&r&&a?l=13:i||s||r||a||(l=14):l=5:l=3:l=2:l=0);const h=(this.grid[e][t].flat().filter(Boolean)[0]??8)-1,o=this.add.sprite(8*t*4+this.playAreaX,8*e*4+this.playAreaY,"tiles",l+15*h).setOrigin(0,0);this.gridBlocks.push(o)}}handleHorizontalMove(e){var t,i;const s=null==(t=this.cursors)?void 0:t.left.isDown,r=null==(i=this.cursors)?void 0:i.right.isDown;if(s||r){const t=s?"left":"right";if(this.moveDirection!==t)this.moveDirection=t,this.keyPressTime=e,this.lastMoveTime=e,this.renderPlayer(t);else{const i=e-this.keyPressTime,s=e-this.lastMoveTime;i>=this.das&&s>=this.arr&&(this.lastMoveTime=e,this.renderPlayer(t))}}else this.moveDirection=null,this.keyPressTime=0,this.lastMoveTime=0}handleHardDrop(){this.inputLocked=!0;const e=this.playerRow;let t=this.playerRow;for(;;)if(t+=1,this.playerRow=t,this.checkCollision()){t-=1;break}const i=t,s=i-e,r=Phaser.Math.Clamp(10*s,50,200);this.tweens.add({targets:this.playerSprite,y:8*i*4+this.playAreaY,duration:r,ease:"Quad.easeIn",onComplete:()=>{this.playerRow=i,this.addPlayerToGrid()||(this.playerRow+=1,this.renderPlayerSprite(),this.gameOver=!0),this.clearCompletedLines((()=>{this.inputLocked=!1}))}})}lockPiece(){this.inputLocked=!0,this.addPlayerToGrid()||(this.renderPlayerSprite(),this.gameOver=!0),this.clearCompletedLines((()=>{this.downKeyReleased=!1}))}handleVerticalMove(e){var t;if(null==(t=this.cursors)?void 0:t.down.isDown){if(!this.downKeyReleased)return;if(0===this.downKeyPressTime){if(this.lastUpdateTime=e,this.downKeyPressTime=e,this.softDropping=!1,this.renderPlayer("down"))return void this.lockPiece()}else e-this.downKeyPressTime>this.softDropDelay&&(this.softDropping=!0)}else this.downKeyPressTime=0,this.softDropping=!1,this.downKeyReleased=!0;const i=this.softDropping?this.softDropSpeed:this.gameSpeed;e>this.lastUpdateTime+i&&(this.lastUpdateTime=e,this.renderPlayer("down")&&this.lockPiece())}handleRotationalMove(){var e,t,i,s;(null==(e=this.cursors)?void 0:e.up.isDown)&&this.canRotate&&(this.canRotate=!1,this.renderPlayer("rotate","CW")),(null==(t=this.zKey)?void 0:t.isDown)&&this.canRotate&&(this.canRotate=!1,this.renderPlayer("rotate","CCW")),(null==(i=this.cursors)?void 0:i.up.isUp)&&(null==(s=this.zKey)?void 0:s.isUp)&&!this.canRotate&&(this.canRotate=!0)}renderNextPieces(){if(this.nextPieces.length<1){for(;this.nextPieces.length<1;)this.nextPieces.push(this.pieceGenerator.generatePiece());this.nextPiecesSprites.forEach((e=>e.destroy()));const e=320;for(let t=0;t<this.nextPieces.length;t++){const i=`${this.nextPieces[t]}-0`;this.nextPiecesSprites.push(this.add.sprite(this.playAreaX+e+40,130+80*t,"tetrominos",i).setScale(.7).setOrigin(0,0))}}}update(e){this.pauseGame||this.gameOver||this.inputLocked||(this.handleHorizontalMove(e),this.handleVerticalMove(e),this.handleRotationalMove(),this.renderNextPieces())}}const d={type:i.AUTO,width:530,height:680,parent:"game",backgroundColor:"#333",scale:{mode:i.Scale.FIT,autoCenter:i.Scale.CENTER_BOTH},antialias:!0,scene:[p]};new i.Game(d);
