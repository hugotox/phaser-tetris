var t=Object.defineProperty,e=(e,i,r)=>((e,i,r)=>i in e?t(e,i,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[i]=r)(e,"symbol"!=typeof i?i+"":i,r);import{p as i}from"./phaser-CwoquCe3.js";!function(){const t=document.createElement("link").relList;if(!(t&&t.supports&&t.supports("modulepreload"))){for(const t of document.querySelectorAll('link[rel="modulepreload"]'))e(t);new MutationObserver((t=>{for(const i of t)if("childList"===i.type)for(const t of i.addedNodes)"LINK"===t.tagName&&"modulepreload"===t.rel&&e(t)})).observe(document,{childList:!0,subtree:!0})}function e(t){if(t.ep)return;t.ep=!0;const e=function(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),"use-credentials"===t.crossOrigin?e.credentials="include":"anonymous"===t.crossOrigin?e.credentials="omit":e.credentials="same-origin",e}(t);fetch(t.href,e)}}();const r={T:[[0,2,0],[2,2,2],[0,0,0]],O:[[3,3],[3,3]],L:[[0,0,5],[5,5,5],[0,0,0]],J:[[4,0,0],[4,4,4],[0,0,0]],I:[[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]],S:[[0,7,7],[7,7,0],[0,0,0]],Z:[[6,6,0],[0,6,6],[0,0,0]]},s=Object.keys(r),a={"0->R":[[0,0],[-1,0],[-1,1],[0,-2],[-1,-2]],"R->0":[[0,0],[1,0],[1,-1],[0,2],[1,2]],"R->2":[[0,0],[1,0],[1,-1],[0,2],[1,2]],"2->R":[[0,0],[-1,0],[-1,1],[0,-2],[-1,-2]],"2->L":[[0,0],[1,0],[1,1],[0,-2],[1,-2]],"L->2":[[0,0],[-1,0],[-1,-1],[0,2],[-1,2]],"L->0":[[0,0],[-1,0],[-1,-1],[0,2],[-1,2]],"0->L":[[0,0],[1,0],[1,1],[0,-2],[1,-2]]},l={"0->R":[[0,0],[-2,0],[1,0],[-2,-1],[1,2]],"R->0":[[0,0],[2,0],[-1,0],[2,1],[-1,-2]],"R->2":[[0,0],[-1,0],[2,0],[-1,2],[2,-1]],"2->R":[[0,0],[1,0],[-2,0],[1,-2],[-2,1]],"2->L":[[0,0],[2,0],[-1,0],[2,1],[-1,-2]],"L->2":[[0,0],[-2,0],[1,0],[-2,-1],[1,2]],"L->0":[[0,0],[1,0],[-2,0],[1,-2],[-2,1]],"0->L":[[0,0],[-1,0],[2,0],[-1,2],[2,-1]]};class o{constructor(t){e(this,"bag",[]),this.blockTypes=t}shuffleBag(){this.bag=[...this.blockTypes];for(let t=this.bag.length-1;t>0;t--){const e=Math.floor(Math.random()*(t+1));[this.bag[t],this.bag[e]]=[this.bag[e],this.bag[t]]}}generatePiece(){return 0===this.bag.length&&this.shuffleBag(),this.bag.pop()}}class h extends i.Scene{constructor(){super("Game"),e(this,"playAreaX",10),e(this,"playAreaY",10),e(this,"lastUpdateTime",0),e(this,"gameSpeed",1e3),e(this,"softDropSpeed",30),e(this,"downKeyPressTime",0),e(this,"softDropping",!1),e(this,"softDropDelay",100),e(this,"das",150),e(this,"arr",30),e(this,"moveDirection",null),e(this,"keyPressTime",0),e(this,"lastMoveTime",0),e(this,"cursors"),e(this,"zKey"),e(this,"spaceKey"),e(this,"canRotate",!0),e(this,"inputLocked",!1),e(this,"grid",Array.from({length:20},(()=>Array(10).fill(0)))),e(this,"playerSprite",null),e(this,"playerRow",0),e(this,"playerCol",0),e(this,"playerRotation","0"),e(this,"playerType",null),e(this,"playerMatrix",null),e(this,"gridBlocks",[]),e(this,"pauseGame",!1),e(this,"showGridLines",!1),e(this,"gameOver",!1),e(this,"pieceGenerator",new o(s))}preload(){this.load.atlas("tetrominos","assets/tetris-blocks2.png","assets/tetris-blocks2.json"),this.load.spritesheet("tiles","assets/tetris-tiles2.png",{frameWidth:32,frameHeight:32})}create(){var t,e,i,r;if(this.playAreaX=(this.cameras.main.width-320)/2,this.add.rectangle(this.playAreaX,this.playAreaY,324,644,0).setOrigin(0,0),this.showGridLines){for(let t=1;t<10;t++){const e=32*t;this.add.line(this.playAreaX,this.playAreaY,e,0,e,640,2236962).setOrigin(0,0)}for(let t=1;t<20;t++){const e=32*t;this.add.line(this.playAreaX,this.playAreaY,0,e,320,e,2236962).setOrigin(0,0)}}this.lastUpdateTime=0,this.cursors=null==(t=this.input.keyboard)?void 0:t.createCursorKeys(),this.zKey=null==(e=this.input.keyboard)?void 0:e.addKey(Phaser.Input.Keyboard.KeyCodes.Z),null==(r=null==(i=this.input)?void 0:i.keyboard)||r.on("keydown-SPACE",(()=>{!this.inputLocked&&this.playerSprite&&this.handleHardDrop()})),this.newBlock()}rotate(t,e){if(!t)return null;const i=JSON.parse(JSON.stringify(t));for(let r=0;r<i.length;++r)for(let t=0;t<r;++t)[i[t][r],i[r][t]]=[i[r][t],i[t][r]];return"CW"===e?i.forEach((t=>t.reverse())):i.reverse(),i}checkCollision(){var t,e;if(!this.playerMatrix)return!1;for(let i=0;i<this.playerMatrix.length;i++)for(let r=0;r<this.playerMatrix[i].length;r++)if(0!==this.playerMatrix[i][r]&&(void 0===(null==(t=this.grid[this.playerRow+i])?void 0:t[this.playerCol+r])||0!==(null==(e=this.grid[this.playerRow+i])?void 0:e[this.playerCol+r])))return!0;return!1}addPlayerToGrid(){var t,e,i,r;if(this.playerMatrix){if(this.playerRow<0)return!1;for(let s=0;s<this.playerMatrix.length;s++)for(let a=0;a<this.playerMatrix[s].length;a++)if(0!==this.playerMatrix[s][a]){const l=(null==(t=this.playerMatrix[s-1])?void 0:t[a])??0,o=(null==(e=this.playerMatrix[s])?void 0:e[a+1])??0,h=(null==(i=this.playerMatrix[s+1])?void 0:i[a])??0,n=(null==(r=this.playerMatrix[s])?void 0:r[a-1])??0;this.grid[this.playerRow+s][this.playerCol+a]=[l,o,h,n]}return!0}}clearCompletedLines(t){let e=0;const i=[];for(let r=0;r<20;r++){let t=0;for(let e=0;e<10;e++)this.grid[r][e]&&(t+=1);10===t&&(e+=1,i.push(r))}return this.pauseGame=!0,this.time.delayedCall(e?100+100*e:10,(()=>{var e;this.gameOver||(i.forEach((t=>{var e;for(let i=0;i<10;i++){if(Array.isArray(this.grid[t-1][i])&&4===this.grid[t-1][i].length){const e=this.grid[t-1][i].flat().filter(Boolean)[0];this.grid[t-1][i][2]=0,0===this.grid[t-1][i].flat().filter(Boolean).length&&(this.grid[t-1][i]=[e])}if(Array.isArray(null==(e=this.grid[t+1])?void 0:e[i])&&4===this.grid[t+1][i].length){const e=this.grid[t+1][i].flat().filter(Boolean)[0];this.grid[t+1][i][0]=0,0===this.grid[t+1][i].flat().filter(Boolean).length&&(this.grid[t+1][i]=[e])}}})),i.forEach((t=>{this.grid.splice(t,1),this.grid.unshift(Array(10).fill(0))})),null==(e=this.playerSprite)||e.destroy(),this.playerSprite=null,this.newBlock(),this.renderGridBlocks(),this.pauseGame=!1,null==t||t())})),this.downKeyPressTime=0,this.softDropping=!1,e}newBlock(){this.playerRotation="0",this.playerType=this.pieceGenerator.generatePiece(),this.playerRow=-1,this.playerCol=3,this.playerMatrix=r[this.playerType]}renderPlayerSprite(){const t=`${this.playerType}-${this.playerRotation}`;let e=this.playerCol,i=this.playerRow;"I"===this.playerType?"0"===this.playerRotation?i+=1:"R"===this.playerRotation?e+=2:"2"===this.playerRotation?i+=2:"L"===this.playerRotation&&(e+=1):"J"!==this.playerType&&"L"!==this.playerType&&"T"!==this.playerType&&"S"!==this.playerType&&"Z"!==this.playerType||("R"===this.playerRotation?e+=1:"2"===this.playerRotation&&(i+=1)),this.playerSprite?(this.playerSprite.setFrame(t),this.playerSprite.setX(8*e*4+this.playAreaX),this.playerSprite.setY(8*i*4+this.playAreaY)):this.playerSprite=this.add.sprite(8*e*4+this.playAreaX,8*i*4+this.playAreaY,"tetrominos",t).setOrigin(0,0)}getNextRotation(t,e){if("CW"===e){if("0"===t)return"R";if("R"===t)return"2";if("2"===t)return"L";if("L"===t)return"0"}else{if("0"===t)return"L";if("L"===t)return"2";if("2"===t)return"R";if("R"===t)return"0"}return t}canPlacePieceAt(t,e){if(!this.playerMatrix)return!1;for(let i=0;i<this.playerMatrix.length;i++)for(let r=0;r<this.playerMatrix[i].length;r++)if(0!==this.playerMatrix[i][r]&&(void 0===this.grid[e+i]||0!==this.grid[e+i][t+r]))return!1;return!0}renderPlayer(t,e="CW"){let i=!1;if("right"===t)this.playerCol+=1,this.checkCollision()&&(i=!0,this.playerCol-=1);else if("left"===t)this.playerCol-=1,this.checkCollision()&&(i=!0,this.playerCol+=1);else if("down"===t)this.playerRow+=1,this.checkCollision()&&(i=!0,this.playerRow-=1);else if("rotate"===t){const t=this.playerRotation,r=this.getNextRotation(this.playerRotation,e),s="I"===this.playerType?l:a,o=`${t}->${r}`;this.playerMatrix=this.rotate(this.playerMatrix,e),i=!0;for(const[e,a]of s[o]){const t=this.playerCol+e,s=this.playerRow+a;if(this.canPlacePieceAt(t,s)&&(this.playerCol=t,this.playerRow=s,this.playerRotation=r,!this.checkCollision())){i=!1;break}}i&&(this.playerMatrix=this.rotate(this.playerMatrix,"CW"===e?"CCW":"CW"),this.playerRotation=t)}return this.renderPlayerSprite(),i}renderGridBlocks(){this.gridBlocks.forEach((t=>t.destroy()));for(let t=0;t<this.grid.length;t++)for(let e=0;e<this.grid[t].length;e++)if(0!==this.grid[t][e]&&Array.isArray(this.grid[t][e])){const i=this.grid[t][e][0],r=this.grid[t][e][1],s=this.grid[t][e][2],a=this.grid[t][e][3];let l=14;4===this.grid[t][e].length&&(i||!r||s||a?!i&&r&&!s&&a?l=1:i||r||s||!a?i||r||!s||a?i&&!r&&s&&!a?l=4:!i||r||s||a?i&&r&&!s&&a?l=6:i&&r&&s&&!a?l=7:!i&&r&&s&&a?l=8:i&&!r&&s&&a?l=9:!i&&r&&s&&!a?l=10:i&&!r&&!s&&a?l=11:i&&r&&!s&&!a?l=12:!i&&!r&&s&&a?l=13:i||r||s||a||(l=14):l=5:l=3:l=2:l=0);const o=(this.grid[t][e].flat().filter(Boolean)[0]??8)-1,h=this.add.sprite(8*e*4+this.playAreaX,8*t*4+this.playAreaY,"tiles",l+15*o).setOrigin(0,0);this.gridBlocks.push(h)}}handleHorizontalMove(t){var e,i;const r=null==(e=this.cursors)?void 0:e.left.isDown,s=null==(i=this.cursors)?void 0:i.right.isDown;if(r||s){const e=r?"left":"right";if(this.moveDirection!==e)this.moveDirection=e,this.keyPressTime=t,this.lastMoveTime=t,this.renderPlayer(e);else{const i=t-this.keyPressTime,r=t-this.lastMoveTime;i>=this.das&&r>=this.arr&&(this.lastMoveTime=t,this.renderPlayer(e))}}else this.moveDirection=null,this.keyPressTime=0,this.lastMoveTime=0}handleHardDrop(){this.inputLocked=!0;const t=this.playerRow;let e=this.playerRow;for(;;)if(e+=1,this.playerRow=e,this.checkCollision()){e-=1;break}const i=e,r=i-t,s=Phaser.Math.Clamp(10*r,50,200);this.tweens.add({targets:this.playerSprite,y:8*i*4+this.playAreaY,duration:s,ease:"Quad.easeIn",onComplete:()=>{this.playerRow=i,this.addPlayerToGrid()||(this.playerRow+=1,this.renderPlayerSprite(),this.gameOver=!0),this.clearCompletedLines((()=>{this.inputLocked=!1}))}})}handleVerticalMove(t){var e;(null==(e=this.cursors)?void 0:e.down.isDown)?0===this.downKeyPressTime?(this.downKeyPressTime=t,this.softDropping=!1,this.renderPlayer("down"),this.lastUpdateTime=t):t-this.downKeyPressTime>this.softDropDelay&&(this.softDropping=!0):(this.downKeyPressTime=0,this.softDropping=!1);const i=this.softDropping?this.softDropSpeed:this.gameSpeed;t>this.lastUpdateTime+i&&(this.lastUpdateTime=t,this.renderPlayer("down")&&(this.addPlayerToGrid()||(this.playerRow+=1,this.renderPlayerSprite(),this.gameOver=!0),this.clearCompletedLines()))}handleRotationalMove(){var t,e,i,r;(null==(t=this.cursors)?void 0:t.up.isDown)&&this.canRotate&&(this.canRotate=!1,this.renderPlayer("rotate","CW")),(null==(e=this.zKey)?void 0:e.isDown)&&this.canRotate&&(this.canRotate=!1,this.renderPlayer("rotate","CCW")),(null==(i=this.cursors)?void 0:i.up.isUp)&&(null==(r=this.zKey)?void 0:r.isUp)&&!this.canRotate&&(this.canRotate=!0)}update(t){this.pauseGame||this.gameOver||this.inputLocked||(this.handleVerticalMove(t),this.handleHorizontalMove(t),this.handleRotationalMove())}consoleLogGrid(){console.log({X:this.playerRow,Y:this.playerCol,R:this.playerRotation,matrix:this.playerMatrix});let t="";for(let e=0;e<this.grid.length;e++){if(0===e){t+="    ";for(let i=0;i<this.grid[e].length;i++)t+=String(i)+"   ";t+="\n"}t+=`${String(e).padStart(2," ")}: `;for(let i=0;i<this.grid[e].length;i++)t+=String(this.grid[e][i]?"#":".")+"   ";t+="\n"}console.log(t)}}const n={type:i.AUTO,width:480,height:700,parent:"game",backgroundColor:"#008080",scale:{mode:i.Scale.FIT,autoCenter:i.Scale.CENTER_BOTH},antialias:!1,scene:[h]};new i.Game(n);
